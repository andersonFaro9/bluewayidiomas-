image: tevun/quasar:latest

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - quasar/node_modules/
  policy: pull-push

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval "$(ssh-agent -s)"
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "${DEPLOY_SERVER_PRIVATE_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - ssh-add ~/.ssh/id_rsa
  - git config --global user.email "ci@bluewaycursos.com.br"
  - git config --global user.name "CI"
  - git submodule sync --recursive
  - git submodule update --init --recursive
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

develop:
  only:
    - develop
  script:
    # force develop branch
    - git checkout develop
    - git branch -vv
    # remove previous git information
    - rm -rf .git
    - BUILD_DIR="$(pwd)"

    # create dist project based on laravel
    - mv "${BUILD_DIR}/laravel" "${BUILD_DIR}/dist"
    - cat "${DEVELOP_DEPLOY_ENV}" > "${BUILD_DIR}/dist/.env"
    - cp ".environment/blueway.devi.tools/docker-compose.yml" "${BUILD_DIR}/dist/docker-compose.yml"

    # build quasar app
    - cd "${BUILD_DIR}/quasar"
    - npm install
    - quasar build -m pwa
    - cp -r "${BUILD_DIR}"/quasar/dist/pwa/* "${BUILD_DIR}/dist/public"

    # get infra stuffs
    - cp -r "${BUILD_DIR}/.docker" "${BUILD_DIR}/dist/.docker"
    - cp -r "${BUILD_DIR}/.tevun" "${BUILD_DIR}/dist/.tevun"

    # go to dist project, create a new git repository and add all files
    - cd ${BUILD_DIR}/dist
    - git init
    - git add -f docker-compose.yml # force add special files
    - git add -f .env # force add special files
    - git add .
    - git commit --quiet -m "[deploy] $(date)"

    # setup and execute deploy
    - echo "Add host ${DEVELOP_DEPLOY_HOST}"
    - echo "${DEVELOP_DEPLOY_HOST}" > ~/.ssh/known_hosts
    - echo "chmod on ~/.ssh/known_hosts"
    - chmod 644 ~/.ssh/known_hosts
    - echo "Deploy 'develop' (${DEVELOP_DEPLOY_REMOTE})"
    - git remote add stage ${DEVELOP_DEPLOY_REMOTE}
    - git push stage master --force

master:
  only:
    - master
  script:
    # force master branch
    - git checkout master
    - git branch -vv
    # remove previous git information
    - rm -rf .git
    - BUILD_DIR="$(pwd)"

    # create dist project based on laravel
    - mv "${BUILD_DIR}/laravel" "${BUILD_DIR}/dist"
    - cat "${MASTER_DEPLOY_ENV}" > "${BUILD_DIR}/dist/.env"
    - cp ".environment/bluewaycursos.com.br/docker-compose.yml" "${BUILD_DIR}/dist/docker-compose.yml"

    # build quasar app
    - cd "${BUILD_DIR}/quasar"
    - npm install
    - quasar build -m pwa
    - cp -r "${BUILD_DIR}"/quasar/dist/pwa/* "${BUILD_DIR}/dist/public"

    # get infra stuffs
    - cp -r "${BUILD_DIR}/.docker" "${BUILD_DIR}/dist/.docker"
    - cp -r "${BUILD_DIR}/.tevun" "${BUILD_DIR}/dist/.tevun"

    # go to dist project, create a new git repository and add all files
    - cd ${BUILD_DIR}/dist
    - git init
    - git add -f docker-compose.yml # force add special files
    - git add -f .env # force add special files
    - git add .
    - git commit --quiet -m "[deploy] $(date)"

    # setup and execute deploy
    - echo "Add host ${MASTER_DEPLOY_HOST}"
    - echo "${MASTER_DEPLOY_HOST}" > ~/.ssh/known_hosts
    - echo "chmod on ~/.ssh/known_hosts"
    - chmod 644 ~/.ssh/known_hosts
    - echo "Deploy 'master' (${MASTER_DEPLOY_REMOTE})"
    - git remote add stage ${MASTER_DEPLOY_REMOTE}
    - git push stage master --force
